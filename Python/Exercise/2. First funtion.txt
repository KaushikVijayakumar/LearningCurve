# Example 1

def tax(bill):
    """Adds 8% tax to a restaurant bill."""
    bill *= 1.08
    print "With tax: %f" % bill
    return bill

def tip(bill):
    """Adds 15% tip to a restaurant bill."""
    bill *= 1.15
    print "With tip: %f" % bill
    return bill
    
meal_cost = 100
meal_with_tax = tax(meal_cost)
meal_with_tip = tip(meal_with_tax)



# Example 2

def square(n):
    """Returns the square of a number."""
    squared = n**2
    print "%d squared is %d." % (n, squared)
    return squared
    
# Call the square function on line 9! Make sure to
# include the number 10 between the parentheses.
square(10)



# Example 3 - Recursive function

def one_good_turn(n):
    return n + 1
    
def deserves_another(n):
    return one_good_turn(n) + 2

deserves_another (2)


# Example 4 - More functions
def cube(number):
    return number * number * number

def by_three(number):
    if (number%3 == 0):
        print "The number is divisible by 3"
        return cube(number)
    else:        
        print "The number is not divisible by 3"
        return False
    
    
# Invoking in-built functions
import math
print math.sqrt(25)

# To import on specific functions needed so the prefix can be avoided
from math import sqrt
print sqrt(25)

# Import all from a module, say math
from math import *

# sorting all the functions and variables of a module
import math            # Imports the math module
everything = dir(math) # Sets everything to a list of things from math
print everything       # Prints 'em all!



# A little more analytic!!
# IMPORTANT use * to pass a list to a function
def biggest_number(*args):
    print max(args)
    return max(args)
    
def smallest_number(*args):
    print min(args)
    return min(args)

def distance_from_zero(arg):
    print abs(arg)
    return abs(arg)


biggest_number(-10, -5, 5, 10)
smallest_number(-10, -5, 5, 10)
distance_from_zero(-10)

# Get the type of an interger
type(92.333)
type(45)

int = 23
float = 1.23
str = "hey!"
type(int)
type(float)
type(str)










